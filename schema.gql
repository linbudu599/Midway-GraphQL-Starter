# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

input DeleteProfileInput {
  id: Int!
}

interface IPost {
  content: String!
  createDate: DateTime!
  postId: ID!
  title: String!
  updateDate: DateTime!
}

interface IProfile {
  createDate: DateTime!
  description: String!
  profileId: ID!
  updateDate: DateTime!
}

interface IUser {
  createDate: DateTime!
  id: ID!
  name: String!
  posts: [Post!]
  profile: Profile
  updateDate: DateTime!
}

type Mutation {
  CreateUser(createParams: UserCreateInput!): User
  UpdateProfile(updateParams: UpdateProfileInput!): Profile!
  UpdateUser(updateParams: UserUpdateInput!): User
}

type Post implements IPost {
  content: String!
  createDate: DateTime!
  postId: ID!
  title: String!
  updateDate: DateTime!
}

type PrismaSample {
  createdAt: DateTime!
  id: ID!
  version: String!
}

type Profile implements IProfile {
  createDate: DateTime!
  description: String!
  profileId: ID!
  updateDate: DateTime!
}

type Query {
  GetAllUsers(pagination: UserPaginationInput): [User!]!
  GetProfileById(id: Int!): Profile!
  GetUserById(id: Int!): User
  PrismaSample: [PrismaSample!]!
}

input UpdateProfileInput {
  id: Int!
}

type User implements IUser {
  createDate: DateTime!
  id: ID!
  name: String!
  posts: [Post!]
  profile: Profile
  updateDate: DateTime!
}

input UserCreateInput {
  name: String!
}

input UserPaginationInput {
  offset: Int!
  take: Int!
}

input UserUpdateInput {
  id: Int!
  name: String!
}
